
#include "mongoose.h"
#include "mongoose.c"
#include<string>
#include<iostream>
static struct mg_serve_http_opts s_http_server_opts;
static void ev_handler(struct mg_connection *nc,int ev,void *p){
 if(ev == MG_EV_HTTP_REQUEST){
mg_serve_http(nc,(struct http_message *)p,s_http_server_opts);
}
}
  
int initserver(int port){
struct mg_mgr mgr;
struct mg_connection *nc;
std::string portToChar=std::to_string(port);
static char const*sPort=portToChar.c_str();
mg_mgr_init(&mgr,NULL);
std::cout<<"starting webserver on port"<<sPort<<std::endl;
nc=mg_bind(&mgr,sPort,ev_handler);
if(nc==NULL){
std::cout<<"faild to create listner" << std::endl;
//return 1;
}
mg_set_protocol_http_websocket(nc);
s_http_server_opts.document_root=".";
s_http_server_opts.enable_directory_listing="yes";
for(;;){
mg_mgr_poll(&mgr,1000);
}
mg_mgr_free(&mgr);
return 0;
}
int main (void){
int port;
std::cout<<"select server port"<<std::endl;
std::cin>>port;
if(std::cin.fail()){
  port=1000;
}
initserver(port);
  return 0;
}


